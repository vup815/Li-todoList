{"version":3,"sources":["App.js","index.js"],"names":["Page","styled","div","Title","h1","MessageForm","form","MessageTextArea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","ErrorMessage","Loading","Message","author","time","children","Date","toLocaleString","App","useState","messages","setMessages","messageApiError","setMessageApiError","value","setValue","isLoading","setIsloading","fetchMessage","fetch","then","res","json","data","catch","err","message","console","error","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","onFocus","onChange","target","rows","slice","map","createdAt","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAIMA,EAAOC,IAAOC,IAAV,oEAKJC,EAAQF,IAAOG,GAAV,8CAGLC,EAAcJ,IAAOK,KAAV,mDAGXC,EAAkBN,IAAOO,SAAV,8CAGfC,EAAeR,IAAOS,OAAV,uEAKZC,EAAcV,IAAOC,IAAV,mDAIXU,EAAmBX,IAAOC,IAAV,2JAUhBW,EAAcZ,IAAOC,IAAV,iKAMXY,EAAgBb,IAAOC,IAAV,+DAIba,EAAcd,IAAOC,IAAV,0BACXc,EAAcf,IAAOC,IAAV,yEAIXe,EAAehB,IAAOC,IAAV,6CAGZgB,EAAUjB,IAAOC,IAAV,sQAcb,SAASiB,EAAT,GAA8C,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC7B,OACI,eAACV,EAAD,WACI,eAACC,EAAD,WACI,cAACC,EAAD,UAAgBM,IAChB,cAACL,EAAD,UAAc,IAAIQ,KAAKF,GAAMG,sBAEjC,cAACR,EAAD,UAAcM,OAiFXG,MAxEf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACJC,EADI,KACMC,EADN,OAEmCF,mBAAS,MAF5C,mBAEJG,EAFI,KAEaC,EAFb,OAGeJ,qBAHf,mBAGJK,EAHI,KAGGC,EAHH,OAIuBN,oBAAS,GAJhC,mBAIJO,EAJI,KAIOC,EAJP,KAKLC,EAAe,WACjB,OAAOC,MAxFH,2EAyFCC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFZ,EAAYY,MAEfC,OAAM,SAAAC,GACHZ,EAAmBY,EAAIC,SACvBC,QAAQC,MAAMH,OAsC1B,OAHAI,qBAAU,WACNX,MACD,IAEC,eAACnC,EAAD,WACKiC,GAAa,cAACf,EAAD,yBACd,cAACf,EAAD,iCACA,eAACE,EAAD,CAAa0C,SApCI,SAAAC,GACrBA,EAAEC,iBACEhB,IAGJC,GAAa,GACbF,EAAS,IACTI,MAAM,8CAA+C,CACjDc,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,SAAU,cACVH,KAAMrB,MAGTM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACGA,EAAKgB,IACN1B,EAAmBU,EAAKG,SAE5BR,IACAD,GAAa,MAEhBO,OAAM,SAAAC,GACHR,GAAa,QAUwBuB,QAAS,kBAAM3B,EAAmB,OAA3E,UACI,cAACvB,EAAD,CAAiBwB,MAAOA,EAAO2B,SAxCd,SAAAV,GACzBhB,EAASgB,EAAEW,OAAO5B,QAuCqD6B,KAAM,KACrE,cAACnD,EAAD,0CAEHoB,GAAmB,cAACZ,EAAD,UAAeY,IACnC,cAAClB,EAAD,UACKgB,GACGA,EAASkC,MAAM,EAAG,GAAGC,KAAI,SAAAnB,GAAO,OAC5B,cAACxB,EAAD,CAA0BC,OAAQuB,EAAQY,SAAUlC,KAAMsB,EAAQoB,UAAlE,SACKpB,EAAQS,MADCT,EAAQqB,aChJ9CC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.70ddd9e5.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nconst API = 'https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc';\nconst Page = styled.div`\n    width: 360px;\n    margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n    color: #333;\n`;\nconst MessageForm = styled.form`\n    margin-top: 16px;\n`;\nconst MessageTextArea = styled.textarea`\n    width: 100%;\n`;\nconst SubmitButton = styled.button`\n    margin-top: 8px;\n    display: block;\n`;\n\nconst MessageList = styled.div`\n    margin-top: 16px;\n`;\n\nconst MessageContainer = styled.div`\n    border: 1px solid black;\n    padding: 8px 16px;\n    border-radius: 8px;\n\n    & + & {\n        margin-top: 8px;\n    }\n`;\n\nconst MessageHead = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding-bottom: 4px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n`;\nconst MessageAuthor = styled.div`\n    color: rgba(12, 22, 33, 0.3);\n`;\n\nconst MessageTime = styled.div``;\nconst MessageBody = styled.div`\n    margin-top: 16px;\n    font-size: 16px;\n`;\nconst ErrorMessage = styled.div`\n    color: red;\n`;\nconst Loading = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.5);\n    color: white;\n    font-size: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nfunction Message({ author, time, children }) {\n    return (\n        <MessageContainer>\n            <MessageHead>\n                <MessageAuthor>{author}</MessageAuthor>\n                <MessageTime>{new Date(time).toLocaleString()}</MessageTime>\n            </MessageHead>\n            <MessageBody>{children}</MessageBody>\n        </MessageContainer>\n    );\n}\nMessage.propTypes = {\n    author: PropTypes.string.isRequired,\n    time: PropTypes.number.isRequired,\n    children: PropTypes.node.isRequired,\n};\nfunction App() {\n    const [messages, setMessages] = useState([]);\n    const [messageApiError, setMessageApiError] = useState(null);\n    const [value, setValue] = useState();\n    const [isLoading, setIsloading] = useState(false);\n    const fetchMessage = () => {\n        return fetch(API)\n            .then(res => res.json())\n            .then(data => {\n                setMessages(data);\n            })\n            .catch(err => {\n                setMessageApiError(err.message);\n                console.error(err);\n            });\n    };\n    const handleTextAreaChange = e => {\n        setValue(e.target.value);\n    };\n    const handleFormSubmit = e => {\n        e.preventDefault();\n        if (isLoading) {\n            return;\n        }\n        setIsloading(true);\n        setValue('');\n        fetch('https://student-json-api.lidemy.me/comments', {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body: JSON.stringify({\n                nickname: 'hahow sucks',\n                body: value,\n            }),\n        })\n            .then(res => res.json())\n            .then(data => {\n                if (!data.ok) {\n                    setMessageApiError(data.message);\n                }\n                fetchMessage();\n                setIsloading(false);\n            })\n            .catch(err => {\n                setIsloading(false);\n            });\n    };\n    useEffect(() => {\n        fetchMessage();\n    }, []);\n    return (\n        <Page>\n            {isLoading && <Loading>Loading...</Loading>}\n            <Title>留言板</Title>\n            <MessageForm onSubmit={handleFormSubmit} onFocus={() => setMessageApiError(null)}>\n                <MessageTextArea value={value} onChange={handleTextAreaChange} rows={10} />\n                <SubmitButton>送出留言</SubmitButton>\n            </MessageForm>\n            {messageApiError && <ErrorMessage>{messageApiError}</ErrorMessage>}\n            <MessageList>\n                {messages &&\n                    messages.slice(0, 6).map(message => (\n                        <Message key={message.id} author={message.nickname} time={message.createdAt}>\n                            {message.body}\n                        </Message>\n                    ))}\n            </MessageList>\n        </Page>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}